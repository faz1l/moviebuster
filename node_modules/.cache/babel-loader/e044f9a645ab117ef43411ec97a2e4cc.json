{"ast":null,"code":"var _jsxFileName = \"/Users/naumnaumov/Projects/moviebuster/src/components/App.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\nconst initialState = {\n  loading: true,\n  movies: [],\n  errorMessage: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return { ...state,\n        loading: true,\n        errorMessage: null\n      };\n\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return { ...state,\n        loading: false,\n        movies: action.payload\n      };\n\n    case \"SEARCH_MOVIES_FAILURE\":\n      return { ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    fetch(MOVIE_API_URL).then(response => response.json()).then(jsonResponse => {\n      dispatch({\n        type: \"SEARCH_MOVIES_SUCCESS\",\n        payload: jsonResponse.Search\n      });\n    });\n  }, []);\n\n  const search = searchValue => {\n    dispatch({\n      type: \"SEARCH_MOVIES_REQUEST\"\n    });\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`).then(response => response.json()).then(jsonResponse => {\n      if (jsonResponse.Response === \"True\") {\n        dispatch({\n          type: \"SEARCH_MOVIES_SUCCESS\",\n          payload: jsonResponse.Search\n        });\n      } else {\n        dispatch({\n          type: \"SEARCH_MOVIES_FAILURE\",\n          error: jsonResponse.Error\n        });\n      }\n    });\n  };\n\n  const {\n    movies,\n    errorMessage,\n    loading\n  } = state;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Header, {\n    text: \"MovieBuster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Search, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"App-intro\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Sharing a few of our favourite movies\"), React.createElement(\"div\", {\n    className: \"movies\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, loading && !errorMessage ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"loading... \") : errorMessage ? React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, errorMessage) : movies.map((movie, index) => React.createElement(Movie, {\n    key: `${index}-${movie.Title}`,\n    movie: movie,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/naumnaumov/Projects/moviebuster/src/components/App.js"],"names":["React","useReducer","useEffect","Header","Movie","Search","MOVIE_API_URL","initialState","loading","movies","errorMessage","reducer","state","action","type","payload","error","App","dispatch","fetch","then","response","json","jsonResponse","search","searchValue","Response","Error","map","movie","index","Title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,aAAa,GAAG,gDAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,YAAY,EAAE;AAHK,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELJ,QAAAA,OAAO,EAAE,IAFJ;AAGLE,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAHV,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,YAAY,EAAEG,MAAM,CAACG;AAHhB,OAAP;;AAKF;AACE,aAAOJ,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,MAAMK,GAAG,GAAG,MAAM;AAChB,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBjB,UAAU,CAACU,OAAD,EAAUJ,YAAV,CAApC;AAEEL,EAAAA,SAAS,CAAC,MAAM;AAEZiB,IAAAA,KAAK,CAACb,aAAD,CAAL,CACKc,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,YAAY,IAAI;AAEtBL,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,uBADD;AAELC,QAAAA,OAAO,EAAEQ,YAAY,CAAClB;AAFjB,OAAD,CAAR;AAIJ,KARA;AASJ,GAXS,EAWP,EAXO,CAAT;;AAaA,QAAMmB,MAAM,GAAGC,WAAW,IAAI;AAC7BP,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAIGK,IAAAA,KAAK,CAAE,8BAA8BM,WAAa,kBAA7C,CAAL,CACAL,IADA,CACKC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADjB,EAEAF,IAFA,CAEKG,YAAY,IAAI;AACpB,UAAIA,YAAY,CAACG,QAAb,KAA0B,MAA9B,EAAsC;AACpCR,QAAAA,QAAQ,CAAC;AACJJ,UAAAA,IAAI,EAAE,uBADF;AAEJC,UAAAA,OAAO,EAAEQ,YAAY,CAAClB;AAFlB,SAAD,CAAR;AAID,OALD,MAKO;AACLa,QAAAA,QAAQ,CAAC;AACJJ,UAAAA,IAAI,EAAE,uBADF;AAEJE,UAAAA,KAAK,EAAEO,YAAY,CAACI;AAFhB,SAAD,CAAR;AAIA;AACH,KAdA;AAeJ,GApBA;;AAsBA,QAAM;AAAElB,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBF,IAAAA;AAAxB,MAAoCI,KAA1C;AAEA,SACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAGY,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAHF,EAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,OAAO,IAAI,CAACE,YAAZ,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,GAEGA,YAAY,GACd;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,YAAhC,CADc,GAGdD,MAAM,CAACmB,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACT,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAI,GAAGA,KAAO,IAAID,KAAK,CAACE,KAAO,EAAzC;AAA4C,IAAA,KAAK,EAAGF,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANJ,CAJF,CADA;AAkBH,CA1DD;;AA4DA,eAAeZ,GAAf","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport \"../App.css\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\n\nconst MOVIE_API_URL = \"https://www.omdbapi.com/?s=man&apikey=4a3b711b\";\n\nconst initialState = {\n  loading: true,\n  movies: [],\n  errorMessage: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: null\n      };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        movies: action.payload\n      };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n    \n        fetch(MOVIE_API_URL)\n            .then(response => response.json())\n            .then(jsonResponse => {\n        \n            dispatch({\n                type: \"SEARCH_MOVIES_SUCCESS\",\n                payload: jsonResponse.Search\n        \t});\n      \t});\n  \t}, []);\n\n    const search = searchValue => {\n    \tdispatch({\n      \ttype: \"SEARCH_MOVIES_REQUEST\"\n    \t});\n\t\n        fetch(`https://www.omdbapi.com/?s=${ searchValue }&apikey=4a3b711b`)\n      \t.then(response => response.json())\n      \t.then(jsonResponse => {\n        \tif (jsonResponse.Response === \"True\") {\n          \tdispatch({\n                type: \"SEARCH_MOVIES_SUCCESS\",\n                payload: jsonResponse.Search\n          \t});\n        \t} else {\n          \tdispatch({\n                type: \"SEARCH_MOVIES_FAILURE\",\n                error: jsonResponse.Error\n          \t});\n          }\n      \t});\n\t  };\n\n    const { movies, errorMessage, loading } = state;\n\n    return (\n    <div className=\"App\">\n      <Header text=\"MovieBuster\" />\n      <Search search={ search } />\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <span>loading... </span>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{ errorMessage }</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={ `${ index }-${ movie.Title }`} movie={ movie } />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}